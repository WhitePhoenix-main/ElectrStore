@page "/Product/Index"
@using Microsoft.EntityFrameworkCore
@using System.Globalization;
@model ElectrStore.ProductIndexModel
@inject IProductsRepository _productsRepository
@inject StoreContext _context
@inject UserManager<IdentityUser> _userManager

<script src="/css/1.js" asp-append-version="true" xmlns="http://www.w3.org/1999/html"></script>
<link rel="stylesheet" href="/css/ProductInd.css" asp-append-version="true">
<link rel="stylesheet" href="/css/header.css" asp-append-version="true">

@inject UserManager<IdentityUser> _manager
@*<div class="container">
    <div class="row">
        <div id="aside" class="col-md-3">
            <!-- aside Widget -->
            <div class="aside">
                <h3 class="aside-title">Categories</h3>
                <div class="checkbox-filter">

                    <div class="input-checkbox">
                        <input type="checkbox" id="category-1">
                        <label for="category-1">
                            <span></span>
                            Laptops
                            <small>(120)</small>
                        </label>
                    </div>

                    <div class="input-checkbox">
                        <input type="checkbox" id="category-2">
                        <label for="category-2">
                            <span></span>
                            Smartphones
                            <small>(740)</small>
                        </label>
                    </div>

                    <div class="input-checkbox">
                        <input type="checkbox" id="category-3">
                        <label for="category-3">
                            <span></span>
                            Cameras
                            <small>(1450)</small>
                        </label>
                    </div>

                    <div class="input-checkbox">
                        <input type="checkbox" id="category-4">
                        <label for="category-4">
                            <span></span>
                            Accessories
                            <small>(578)</small>
                        </label>
                    </div>

                    <div class="input-checkbox">
                        <input type="checkbox" id="category-5">
                        <label for="category-5">
                            <span></span>
                            Laptops
                            <small>(120)</small>
                        </label>
                    </div>

                    <div class="input-checkbox">
                        <input type="checkbox" id="category-6">
                        <label for="category-6">
                            <span></span>
                            Smartphones
                            <small>(740)</small>
                        </label>
                    </div>
                </div>
            </div>
            <!-- /aside Widget -->

            <!-- aside Widget -->
            <div class="aside">
                <h3 class="aside-title">Price</h3>
                <div class="price-filter">
                    <div id="price-slider"></div>
                    <div class="input-number price-min">
                        <input id="price-min" type="number">
                        <span class="qty-up">+</span>
                        <span class="qty-down">-</span>
                    </div>
                    <span>-</span>
                    <div class="input-number price-max">
                        <input id="price-max" type="number">
                        <span class="qty-up">+</span>
                        <span class="qty-down">-</span>
                    </div>
                </div>
            </div>
            <!-- /aside Widget -->
            
        <div class="col-md-9">
            <div class="row row-cols-2 row-cols-md-3 row-cols-lg-4">
                @foreach (var item in Model.Product)
                {
                    /*var isInWish = dbContext.Set<WishlistRecord>()
                                    .Any(x => x.ProductId == item.Id && x.UserId == userId);*/
        
                    <partial name="Products/Partials/ProductCardPartial" model="@item"/>
                    $1$var priceOut = ((decimal)item.Price / 100.0m).ToString("0.00");
                    
                                    <a asp-page="/Products/ProductEdit" asp-route-id="@item.Id">Edit</a>
                                    <a asp-page="/Products/ProductDetails" asp-route-id="@item.Id">Details</a>
                                    <a asp-page="/Products/ProductDelete" asp-route-id="@item.Id">Delete</a>
                                #1#
                }
            </div>
    </div>
</div>
</div>
<div class="align-content-center">fdgd</div>*@
<head>
    <title>Electro</title>


</head>
<body>

<!-- SECTION -->
<div class="section">
<!-- container -->
<div class="container">
<!-- row -->
<div class="row">
<!-- ASIDE -->
<div id="aside" class="col-md-3">
    <!-- aside Widget -->
    <div class="aside">
        @{
            var search = (string?)ViewData["search"];
            var productType = (string?)ViewData["productType"];
            var productTypes = _context.ProductRecords.AsNoTracking()
                .Select(x => x.CategoryId)
                .OrderBy(x => x)
                .Distinct()
                .Select(x => new SelectListItem(x, x, x == productType))
                .ToList();
        }
        <h3 class="aside-title">Категории</h3>
        <div class="checkbox-filter">
            @foreach (var category in productTypes)
            {
                var productQuan = _context.ProductRecords.AsNoTracking()
                    /*.Select(x => x.CategoryId)*/
                    .Where(x => (x.CategoryId == category.Text))
                    /*.Where(x => (x == category.ToString()))*/
                    .ToList();
                <div class="input-checkbox">
                    <input type="checkbox" id="@category.Text">
                    <label for="@category.Text">
                        <span></span>
                        @category.Value
                        <small>@productQuan.Count</small>
                    </label>
                </div>
            }
        </div>
    </div>
    <!-- /aside Widget -->

    <!-- aside Widget -->
    <a asp-page="/Products/Pages/ProductCreate">fsdf</a>
    <div class="aside">
        <h3 class="aside-title">Price</h3>
        <div class="price-filter">
            <div id="price-slider"></div>
            <div class="input-number price-min">
                <input id="price-min" type="number">
            </div>
            <span>-</span>
            <div class="input-number price-max">
                <input id="price-max" type="number">
            </div>
        </div>
    </div>
    <!-- /aside Widget -->

    <!-- aside Widget -->
    <div class="aside">
        <h3 class="aside-title">Популярны</h3>
        //TODO: Через запрос брать товары
        @*@for (int counter = 0; counter < 4; counter++)
        {
            var productList = Model.Product;
            var product = productList[counter];
            <div class="product-widget">
                    <div class="product-img">
                        <img src="@_productsRepository.GetPic(product)" alt="@product.ProductName">
                    </div>
                    <div class="product-body">
                        <p class="product-category">@product.CategoryId</p>
                        <h3 class="product-name">
                            <a href="#">@product.ProductName</a>
                        </h3>
                        @{
                            string normalPrice = "";
                            if (product.Price % 100 == 0)
                            {
                                if (CultureInfo.CurrentCulture.Name == "ru-RU")
                                {
                                    normalPrice = (product.Price / 100) + ",00";
                                }
                                else
                                {
                                    normalPrice = (product.Price / 100) + ".00";
                                }
                            }
                            else
                            {
                                normalPrice = (product.Price / 100).ToString();
                            }
                            <h4 class="product-price">@normalPrice ₽ <del class="product-old-price">@product.Price/100 ₽</del></h4>
                        }
                    </div>
                </div>
            }*@
    </div>
    <!-- /aside Widget -->
</div>
<!-- /ASIDE -->

<!-- STORE -->
<div id="store" class="col-md-9">
    <!-- store top filter -->
    <div class="store-filter clearfix">
        <div class="store-sort">
            <label>
                Сортировать по:
                <select class="input-select">
                    <option value="0">Популярности</option>
                    <option value="1">Названию</option>
                </select>
            </label>

            <label>
                Показывать:
                <select class="input-select">
                    <option value="0">20</option>
                    <option value="1">50</option>
                </select>
            </label>
        </div>
        <ul class="store-grid">
            <li class="active">
                <i class="fa fa-th"></i>
            </li>
            <li>
                <a href="#">
                    <i class="fa fa-th-list"></i>
                </a>
            </li>
        </ul>
    </div>
    <!-- /store top filter -->

    <!-- store products -->
    <div class="row">
        <!-- product -->
        @foreach (var product in Model.Product)
        {
            <div class="col-md-4 col-xs-6">
                <div class="product">
                    <div class="product-img">
                        <img src="@_productsRepository.GetPic(product)" alt="">
                        <div class="product-label">
                            <span class="sale">-30%</span>
                            <span class="new">NEW</span>
                        </div>
                    </div>
                    <div class="product-body">
                        <p class="product-category">@product.CategoryId</p>
                        <h3 class="product-name">
                            <a asp-page="/Products/Pages/ProductDetails" asp-route-id="@product.Id">@product.ProductName</a>
                        </h3>
                        <h4 class="product-price">@product.Price₽ <del class="product-old-price"> @product.Price₽</del></h4>
                        <div class="product-rating">
                            <i class="bi bi-star"></i>
                            <i class="bi bi-star"></i>
                            <i class="bi bi-star"></i>
                            <i class="bi bi-star"></i>
                            <i class="bi bi-star"></i>
                        </div>
                        <div class="product-btns">
                            <button class="add-to-wishlist">
                                <i class="bi bi-heart"></i><span class="tooltipp">add to wishlist</span>
                            </button>
                            <button class="add-to-compare">
                                <i class="bi bi-bar-chart"></i><span class="tooltipp">add to compare</span>
                            </button>
                            <button class="quick-view">
                                <i class="bi bi-eye"></i><span class="tooltipp">quick view</span>
                            </button>
                        </div>
                    </div>
                    <div class="settings">
                        <a asp-page="/Products/Pages/ProductPictureEdit" asp-route-id="@product.Id">
                            <i class="bi bi-image"></i>
                        </a>
                    </div>
                    @{
                        if (User.Identity.Name is not null)
                        {
                            var user = await _userManager.FindByNameAsync(User.Identity.Name);
                            var userId = user.Id;


                            <form method="post"
                                  asp-page="/Basket/Create"
                                  asp-page-handler="Create">
                                <input type="hidden" name="productId" asp-for="@product.Id"/>
                                <input type="hidden" name="userId" asp-for="@userId"/>
                                <button type="submit" class="btn btn-sm btn-danger">
                                    В корзину
                                </button>
                            </form>
                        }
                    }
                    @*<div class="add-to-cart">
                                    <a asp-page="/Basket/Create" asp-route-id="@product.Id">
                                        <button class="add-to-cart-btn"><i class="bi bi-cart"></i> add to cart</button>
                                    </a>
                                </div>*@
                </div>
            </div>
        }
    </div>

    <!-- /store products -->

    <!-- store bottom filter -->
    <div class="store-filter clearfix">
        <span class="store-qty">Showing 20-100 products</span>
        <ul class="store-pagination">
            <li class="active">1</li>
            <li>
                <a href="#">2</a>
            </li>
            <li>
                <a href="#">3</a>
            </li>
            <li>
                <a href="#">4</a>
            </li>
            <li>
                <a href="#">
                    <i class="fa fa-angle-right"></i>
                </a>
            </li>
        </ul>
    </div>
    <!-- /store bottom filter -->
</div>
<!-- /STORE -->
</div>
<!-- /row -->
</div>
<!-- /container -->
</div>
<!-- /SECTION -->

<script src="js/jquery.min.js"></script>
<script src="js/slick.min.js"></script>
<script src="js/nouislider.min.js"></script>
<script src="js/jquery.zoom.min.js"></script>
<script src="js/main.js"></script>

</body>